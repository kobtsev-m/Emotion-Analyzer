/*! For license information please see image-q.b0256d32a181944cff59.cjs.LICENSE.txt */
var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__defNormalProp=(t,i,e)=>i in t?__defProp(t,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[i]=e,__markAsModule=t=>__defProp(t,"__esModule",{value:!0}),__export=(t,i)=>{for(var e in i)__defProp(t,e,{get:i[e],enumerable:!0})},__reExport=(t,i,e,a)=>{if(i&&"object"===typeof i||"function"===typeof i)for(let r of __getOwnPropNames(i))__hasOwnProp.call(t,r)||!e&&"default"===r||__defProp(t,r,{get:()=>i[r],enumerable:!(a=__getOwnPropDesc(i,r))||a.enumerable});return t},__toCommonJS=(t=>(i,e)=>t&&t.get(i)||(e=__reExport(__markAsModule({}),i,1),t&&t.set(i,e),e))("undefined"!==typeof WeakMap?new WeakMap:0),__publicField=(t,i,e)=>(__defNormalProp(t,"symbol"!==typeof i?i+"":i,e),e),src_exports={};__export(src_exports,{applyPalette:()=>applyPalette,applyPaletteSync:()=>applyPaletteSync,buildPalette:()=>buildPalette,buildPaletteSync:()=>buildPaletteSync,constants:()=>constants_exports,conversion:()=>conversion_exports,distance:()=>distance_exports,image:()=>image_exports,palette:()=>palette_exports,quality:()=>quality_exports,utils:()=>utils_exports});var constants_exports={};__export(constants_exports,{bt709:()=>bt709_exports});var bt709_exports={};__export(bt709_exports,{Y:()=>Y,x:()=>x,y:()=>y});var Y=(t=>(t[t.RED=.2126]="RED",t[t.GREEN=.7152]="GREEN",t[t.BLUE=.0722]="BLUE",t[t.WHITE=1]="WHITE",t))(Y||{}),x=(t=>(t[t.RED=.64]="RED",t[t.GREEN=.3]="GREEN",t[t.BLUE=.15]="BLUE",t[t.WHITE=.3127]="WHITE",t))(x||{}),y=(t=>(t[t.RED=.33]="RED",t[t.GREEN=.6]="GREEN",t[t.BLUE=.06]="BLUE",t[t.WHITE=.329]="WHITE",t))(y||{}),conversion_exports={};function correctGamma(t){return t>.04045?((t+.055)/1.055)**2.4:t/12.92}function rgb2xyz(t,i,e){return{x:.4124*(t=correctGamma(t/255))+.3576*(i=correctGamma(i/255))+.1805*(e=correctGamma(e/255)),y:.2126*t+.7152*i+.0722*e,z:.0193*t+.1192*i+.9505*e}}__export(conversion_exports,{lab2rgb:()=>lab2rgb,lab2xyz:()=>lab2xyz,rgb2hsl:()=>rgb2hsl,rgb2lab:()=>rgb2lab,rgb2xyz:()=>rgb2xyz,xyz2lab:()=>xyz2lab,xyz2rgb:()=>xyz2rgb});var arithmetic_exports={};function degrees2radians(t){return t*(Math.PI/180)}function max3(t,i,e){let a=t;return a<i&&(a=i),a<e&&(a=e),a}function min3(t,i,e){let a=t;return a>i&&(a=i),a>e&&(a=e),a}function intInRange(t,i,e){return t>e&&(t=e),t<i&&(t=i),0|t}function inRange0to255Rounded(t){return(t=Math.round(t))>255?t=255:t<0&&(t=0),t}function inRange0to255(t){return t>255?t=255:t<0&&(t=0),t}function stableSort(t,i){const e=typeof t[0];let a;if("number"===e||"string"===e){const e=Object.create(null);for(let i=0,a=t.length;i<a;i++){const a=t[i];e[a]||0===e[a]||(e[a]=i)}a=t.sort(((t,a)=>i(t,a)||e[t]-e[a]))}else{const e=t.slice(0);a=t.sort(((t,a)=>i(t,a)||e.indexOf(t)-e.indexOf(a)))}return a}function rgb2hsl(t,i,e){const a=min3(t,i,e),r=max3(t,i,e),s=r-a,n=(a+r)/510;let u=0;n>0&&n<1&&(u=s/(n<.5?r+a:510-r-a));let l=0;return s>0&&(l=r===t?(i-e)/s:r===i?2+(e-t)/s:4+(t-i)/s,l*=60,l<0&&(l+=360)),{h:l,s:u,l:n}}__export(arithmetic_exports,{degrees2radians:()=>degrees2radians,inRange0to255:()=>inRange0to255,inRange0to255Rounded:()=>inRange0to255Rounded,intInRange:()=>intInRange,max3:()=>max3,min3:()=>min3,stableSort:()=>stableSort});var refX=.95047,refY=1,refZ=1.08883;function pivot(t){return t>.008856?t**(1/3):7.787*t+16/116}function xyz2lab(t,i,e){if(t=pivot(t/refX),i=pivot(i/refY),e=pivot(e/refZ),116*i-16<0)throw new Error("xxx");return{L:Math.max(0,116*i-16),a:500*(t-i),b:200*(i-e)}}function rgb2lab(t,i,e){const a=rgb2xyz(t,i,e);return xyz2lab(a.x,a.y,a.z)}var refX2=.95047,refY2=1,refZ2=1.08883;function pivot2(t){return t>.206893034?t**3:(t-16/116)/7.787}function lab2xyz(t,i,e){const a=(t+16)/116,r=a-e/200;return{x:refX2*pivot2(i/500+a),y:refY2*pivot2(a),z:refZ2*pivot2(r)}}function correctGamma2(t){return t>.0031308?1.055*t**(1/2.4)-.055:12.92*t}function xyz2rgb(t,i,e){const a=correctGamma2(3.2406*t+-1.5372*i+-.4986*e),r=correctGamma2(-.9689*t+1.8758*i+.0415*e),s=correctGamma2(.0557*t+-.204*i+1.057*e);return{r:inRange0to255Rounded(255*a),g:inRange0to255Rounded(255*r),b:inRange0to255Rounded(255*s)}}function lab2rgb(t,i,e){const a=lab2xyz(t,i,e);return xyz2rgb(a.x,a.y,a.z)}var distance_exports={};__export(distance_exports,{AbstractDistanceCalculator:()=>AbstractDistanceCalculator,AbstractEuclidean:()=>AbstractEuclidean,AbstractManhattan:()=>AbstractManhattan,CIE94GraphicArts:()=>CIE94GraphicArts,CIE94Textiles:()=>CIE94Textiles,CIEDE2000:()=>CIEDE2000,CMetric:()=>CMetric,Euclidean:()=>Euclidean,EuclideanBT709:()=>EuclideanBT709,EuclideanBT709NoAlpha:()=>EuclideanBT709NoAlpha,Manhattan:()=>Manhattan,ManhattanBT709:()=>ManhattanBT709,ManhattanNommyde:()=>ManhattanNommyde,PNGQuant:()=>PNGQuant});var AbstractDistanceCalculator=class{constructor(){__publicField(this,"_maxDistance"),__publicField(this,"_whitePoint"),this._setDefaults(),this.setWhitePoint(255,255,255,255)}setWhitePoint(t,i,e,a){this._whitePoint={r:t>0?255/t:0,g:i>0?255/i:0,b:e>0?255/e:0,a:a>0?255/a:0},this._maxDistance=this.calculateRaw(t,i,e,a,0,0,0,0)}calculateNormalized(t,i){return this.calculateRaw(t.r,t.g,t.b,t.a,i.r,i.g,i.b,i.a)/this._maxDistance}},AbstractCIE94=class extends AbstractDistanceCalculator{calculateRaw(t,i,e,a,r,s,n,u){const l=rgb2lab(inRange0to255(t*this._whitePoint.r),inRange0to255(i*this._whitePoint.g),inRange0to255(e*this._whitePoint.b)),_=rgb2lab(inRange0to255(r*this._whitePoint.r),inRange0to255(s*this._whitePoint.g),inRange0to255(n*this._whitePoint.b)),o=l.L-_.L,h=l.a-_.a,m=l.b-_.b,c=Math.sqrt(l.a*l.a+l.b*l.b),d=c-Math.sqrt(_.a*_.a+_.b*_.b);let p=h*h+m*m-d*d;p=p<0?0:Math.sqrt(p);const b=(u-a)*this._whitePoint.a*this._kA;return Math.sqrt((o/this._Kl)**2+(d/(1+this._K1*c))**2+(p/(1+this._K2*c))**2+b**2)}},CIE94Textiles=class extends AbstractCIE94{_setDefaults(){this._Kl=2,this._K1=.048,this._K2=.014,this._kA=12.5/255}},CIE94GraphicArts=class extends AbstractCIE94{_setDefaults(){this._Kl=1,this._K1=.045,this._K2=.015,this._kA=25/255}},_CIEDE2000=class extends AbstractDistanceCalculator{_setDefaults(){}static _calculatehp(t,i){const e=Math.atan2(t,i);return e>=0?e:e+_CIEDE2000._deg360InRad}static _calculateRT(t,i){const e=i**7,a=2*Math.sqrt(e/(e+_CIEDE2000._pow25to7)),r=_CIEDE2000._deg30InRad*Math.exp(-(((t-_CIEDE2000._deg275InRad)/_CIEDE2000._deg25InRad)**2));return-Math.sin(2*r)*a}static _calculateT(t){return 1-.17*Math.cos(t-_CIEDE2000._deg30InRad)+.24*Math.cos(2*t)+.32*Math.cos(3*t+_CIEDE2000._deg6InRad)-.2*Math.cos(4*t-_CIEDE2000._deg63InRad)}static _calculate_ahp(t,i,e,a){const r=e+a;return 0===t?r:i<=_CIEDE2000._deg180InRad?r/2:r<_CIEDE2000._deg360InRad?(r+_CIEDE2000._deg360InRad)/2:(r-_CIEDE2000._deg360InRad)/2}static _calculate_dHp(t,i,e,a){let r;return r=0===t?0:i<=_CIEDE2000._deg180InRad?e-a:e<=a?e-a+_CIEDE2000._deg360InRad:e-a-_CIEDE2000._deg360InRad,2*Math.sqrt(t)*Math.sin(r/2)}calculateRaw(t,i,e,a,r,s,n,u){const l=rgb2lab(inRange0to255(t*this._whitePoint.r),inRange0to255(i*this._whitePoint.g),inRange0to255(e*this._whitePoint.b)),_=rgb2lab(inRange0to255(r*this._whitePoint.r),inRange0to255(s*this._whitePoint.g),inRange0to255(n*this._whitePoint.b)),o=(u-a)*this._whitePoint.a*_CIEDE2000._kA,h=this.calculateRawInLab(l,_);return Math.sqrt(h+o*o)}calculateRawInLab(t,i){const e=t.L,a=t.a,r=t.b,s=i.L,n=i.a,u=i.b,l=((Math.sqrt(a*a+r*r)+Math.sqrt(n*n+u*u))/2)**7,_=.5*(1-Math.sqrt(l/(l+_CIEDE2000._pow25to7))),o=(1+_)*a,h=(1+_)*n,m=Math.sqrt(o*o+r*r),c=Math.sqrt(h*h+u*u),d=m*c,p=_CIEDE2000._calculatehp(r,o),b=_CIEDE2000._calculatehp(u,h),g=Math.abs(p-b),M=s-e,f=c-m,x=_CIEDE2000._calculate_dHp(d,g,b,p),w=_CIEDE2000._calculate_ahp(d,g,p,b),y=(m+c)/2,F=((e+s)/2-50)**2,S=f/(1+.045*y),Q=x/(1+.015*_CIEDE2000._calculateT(w)*y);return(M/(1+.015*F/Math.sqrt(20+F)))**2+S**2+Q**2+_CIEDE2000._calculateRT(w,y)*S*Q}},CIEDE2000=_CIEDE2000;__publicField(CIEDE2000,"_kA",25/255),__publicField(CIEDE2000,"_pow25to7",25**7),__publicField(CIEDE2000,"_deg360InRad",degrees2radians(360)),__publicField(CIEDE2000,"_deg180InRad",degrees2radians(180)),__publicField(CIEDE2000,"_deg30InRad",degrees2radians(30)),__publicField(CIEDE2000,"_deg6InRad",degrees2radians(6)),__publicField(CIEDE2000,"_deg63InRad",degrees2radians(63)),__publicField(CIEDE2000,"_deg275InRad",degrees2radians(275)),__publicField(CIEDE2000,"_deg25InRad",degrees2radians(25));var CMetric=class extends AbstractDistanceCalculator{calculateRaw(t,i,e,a,r,s,n,u){const l=(t+r)/2*this._whitePoint.r,_=(t-r)*this._whitePoint.r,o=(i-s)*this._whitePoint.g,h=(e-n)*this._whitePoint.b,m=((512+l)*_*_>>8)+4*o*o+((767-l)*h*h>>8),c=(u-a)*this._whitePoint.a;return Math.sqrt(m+c*c)}_setDefaults(){}},AbstractEuclidean=class extends AbstractDistanceCalculator{calculateRaw(t,i,e,a,r,s,n,u){const l=r-t,_=s-i,o=n-e,h=u-a;return Math.sqrt(this._kR*l*l+this._kG*_*_+this._kB*o*o+this._kA*h*h)}},Euclidean=class extends AbstractEuclidean{_setDefaults(){this._kR=1,this._kG=1,this._kB=1,this._kA=1}},EuclideanBT709=class extends AbstractEuclidean{_setDefaults(){this._kR=.2126,this._kG=.7152,this._kB=.0722,this._kA=1}},EuclideanBT709NoAlpha=class extends AbstractEuclidean{_setDefaults(){this._kR=.2126,this._kG=.7152,this._kB=.0722,this._kA=0}},AbstractManhattan=class extends AbstractDistanceCalculator{calculateRaw(t,i,e,a,r,s,n,u){let l=r-t,_=s-i,o=n-e,h=u-a;return l<0&&(l=0-l),_<0&&(_=0-_),o<0&&(o=0-o),h<0&&(h=0-h),this._kR*l+this._kG*_+this._kB*o+this._kA*h}},Manhattan=class extends AbstractManhattan{_setDefaults(){this._kR=1,this._kG=1,this._kB=1,this._kA=1}},ManhattanNommyde=class extends AbstractManhattan{_setDefaults(){this._kR=.4984,this._kG=.8625,this._kB=.2979,this._kA=1}},ManhattanBT709=class extends AbstractManhattan{_setDefaults(){this._kR=.2126,this._kG=.7152,this._kB=.0722,this._kA=1}},PNGQuant=class extends AbstractDistanceCalculator{calculateRaw(t,i,e,a,r,s,n,u){const l=(u-a)*this._whitePoint.a;return this._colordifferenceCh(t*this._whitePoint.r,r*this._whitePoint.r,l)+this._colordifferenceCh(i*this._whitePoint.g,s*this._whitePoint.g,l)+this._colordifferenceCh(e*this._whitePoint.b,n*this._whitePoint.b,l)}_colordifferenceCh(t,i,e){const a=t-i,r=a+e;return a*a+r*r}_setDefaults(){}},palette_exports={};__export(palette_exports,{AbstractPaletteQuantizer:()=>AbstractPaletteQuantizer,ColorHistogram:()=>ColorHistogram,NeuQuant:()=>NeuQuant,NeuQuantFloat:()=>NeuQuantFloat,RGBQuant:()=>RGBQuant,WuColorCube:()=>WuColorCube,WuQuant:()=>WuQuant});var AbstractPaletteQuantizer=class{quantizeSync(){for(const t of this.quantize())if(t.palette)return t.palette;throw new Error("unreachable")}},Point=class{constructor(){__publicField(this,"r"),__publicField(this,"g"),__publicField(this,"b"),__publicField(this,"a"),__publicField(this,"uint32"),__publicField(this,"rgba"),this.uint32=-1>>>0,this.r=this.g=this.b=this.a=0,this.rgba=new Array(4),this.rgba[0]=0,this.rgba[1]=0,this.rgba[2]=0,this.rgba[3]=0}static createByQuadruplet(t){const i=new Point;return i.r=0|t[0],i.g=0|t[1],i.b=0|t[2],i.a=0|t[3],i._loadUINT32(),i._loadQuadruplet(),i}static createByRGBA(t,i,e,a){const r=new Point;return r.r=0|t,r.g=0|i,r.b=0|e,r.a=0|a,r._loadUINT32(),r._loadQuadruplet(),r}static createByUint32(t){const i=new Point;return i.uint32=t>>>0,i._loadRGBA(),i._loadQuadruplet(),i}from(t){this.r=t.r,this.g=t.g,this.b=t.b,this.a=t.a,this.uint32=t.uint32,this.rgba[0]=t.r,this.rgba[1]=t.g,this.rgba[2]=t.b,this.rgba[3]=t.a}getLuminosity(t){let i=this.r,e=this.g,a=this.b;return t&&(i=Math.min(255,255-this.a+this.a*i/255),e=Math.min(255,255-this.a+this.a*e/255),a=Math.min(255,255-this.a+this.a*a/255)),.2126*i+.7152*e+.0722*a}_loadUINT32(){this.uint32=(this.a<<24|this.b<<16|this.g<<8|this.r)>>>0}_loadRGBA(){this.r=255&this.uint32,this.g=this.uint32>>>8&255,this.b=this.uint32>>>16&255,this.a=this.uint32>>>24&255}_loadQuadruplet(){this.rgba[0]=this.r,this.rgba[1]=this.g,this.rgba[2]=this.b,this.rgba[3]=this.a}},PointContainer=class{constructor(){__publicField(this,"_pointArray"),__publicField(this,"_width"),__publicField(this,"_height"),this._width=0,this._height=0,this._pointArray=[]}getWidth(){return this._width}getHeight(){return this._height}setWidth(t){this._width=t}setHeight(t){this._height=t}getPointArray(){return this._pointArray}clone(){const t=new PointContainer;t._width=this._width,t._height=this._height;for(let i=0,e=this._pointArray.length;i<e;i++)t._pointArray[i]=Point.createByUint32(0|this._pointArray[i].uint32);return t}toUint32Array(){const t=this._pointArray.length,i=new Uint32Array(t);for(let e=0;e<t;e++)i[e]=this._pointArray[e].uint32;return i}toUint8Array(){return new Uint8Array(this.toUint32Array().buffer)}static fromHTMLImageElement(t){const i=t.naturalWidth,e=t.naturalHeight,a=document.createElement("canvas");a.width=i,a.height=e;return a.getContext("2d").drawImage(t,0,0,i,e,0,0,i,e),PointContainer.fromHTMLCanvasElement(a)}static fromHTMLCanvasElement(t){const i=t.width,e=t.height,a=t.getContext("2d").getImageData(0,0,i,e);return PointContainer.fromImageData(a)}static fromImageData(t){const i=t.width,e=t.height;return PointContainer.fromUint8Array(t.data,i,e)}static fromUint8Array(t,i,e){switch(Object.prototype.toString.call(t)){case"[object Uint8ClampedArray]":case"[object Uint8Array]":break;default:t=new Uint8Array(t)}const a=new Uint32Array(t.buffer);return PointContainer.fromUint32Array(a,i,e)}static fromUint32Array(t,i,e){const a=new PointContainer;a._width=i,a._height=e;for(let r=0,s=t.length;r<s;r++)a._pointArray[r]=Point.createByUint32(0|t[r]);return a}static fromBuffer(t,i,e){const a=new Uint32Array(t.buffer,t.byteOffset,t.byteLength/Uint32Array.BYTES_PER_ELEMENT);return PointContainer.fromUint32Array(a,i,e)}},hueGroups=10;function hueGroup(t,i){const e=360/i;for(let a=1,r=e-e/2;a<i;a++,r+=e)if(t>=r&&t<r+e)return a;return 0}var Palette=class{constructor(){__publicField(this,"_pointContainer"),__publicField(this,"_pointArray",[]),__publicField(this,"_i32idx",{}),this._pointContainer=new PointContainer,this._pointContainer.setHeight(1),this._pointArray=this._pointContainer.getPointArray()}add(t){this._pointArray.push(t),this._pointContainer.setWidth(this._pointArray.length)}has(t){for(let i=this._pointArray.length-1;i>=0;i--)if(t.uint32===this._pointArray[i].uint32)return!0;return!1}getNearestColor(t,i){return this._pointArray[0|this._getNearestIndex(t,i)]}getPointContainer(){return this._pointContainer}_nearestPointFromCache(t){return"number"===typeof this._i32idx[t]?this._i32idx[t]:-1}_getNearestIndex(t,i){let e=this._nearestPointFromCache(""+i.uint32);if(e>=0)return e;let a=Number.MAX_VALUE;e=0;for(let r=0,s=this._pointArray.length;r<s;r++){const s=this._pointArray[r],n=t.calculateRaw(i.r,i.g,i.b,i.a,s.r,s.g,s.b,s.a);n<a&&(a=n,e=r)}return this._i32idx[i.uint32]=e,e}sort(){this._i32idx={},this._pointArray.sort(((t,i)=>{const e=rgb2hsl(t.r,t.g,t.b),a=rgb2hsl(i.r,i.g,i.b),r=t.r===t.g&&t.g===t.b?0:1+hueGroup(e.h,hueGroups),s=(i.r===i.g&&i.g===i.b?0:1+hueGroup(a.h,hueGroups))-r;if(s)return-s;const n=t.getLuminosity(!0),u=i.getLuminosity(!0);if(u-n!==0)return u-n;const l=(100*a.s|0)-(100*e.s|0);return l?-l:0}))}},utils_exports={};__export(utils_exports,{HueStatistics:()=>HueStatistics,Palette:()=>Palette,Point:()=>Point,PointContainer:()=>PointContainer,ProgressTracker:()=>ProgressTracker,arithmetic:()=>arithmetic_exports});var HueGroup=class{constructor(){__publicField(this,"num",0),__publicField(this,"cols",[])}},HueStatistics=class{constructor(t,i){__publicField(this,"_numGroups"),__publicField(this,"_minCols"),__publicField(this,"_stats"),__publicField(this,"_groupsFull"),this._numGroups=t,this._minCols=i,this._stats=[];for(let e=0;e<=t;e++)this._stats[e]=new HueGroup;this._groupsFull=0}check(t){this._groupsFull===this._numGroups+1&&(this.check=()=>{});const i=255&t,e=t>>>8&255,a=t>>>16&255,r=i===e&&e===a?0:1+hueGroup(rgb2hsl(i,e,a).h,this._numGroups),s=this._stats[r],n=this._minCols;s.num++,s.num>n||(s.num===n&&this._groupsFull++,s.num<=n&&this._stats[r].cols.push(t))}injectIntoDictionary(t){for(let i=0;i<=this._numGroups;i++)this._stats[i].num<=this._minCols&&this._stats[i].cols.forEach((i=>{t[i]?t[i]++:t[i]=1}))}injectIntoArray(t){for(let i=0;i<=this._numGroups;i++)this._stats[i].num<=this._minCols&&this._stats[i].cols.forEach((i=>{-1===t.indexOf(i)&&t.push(i)}))}},_ProgressTracker=class{constructor(t,i){__publicField(this,"progress"),__publicField(this,"_step"),__publicField(this,"_range"),__publicField(this,"_last"),__publicField(this,"_progressRange"),this._range=t,this._progressRange=i,this._step=Math.max(1,this._range/(_ProgressTracker.steps+1)|0),this._last=-this._step,this.progress=0}shouldNotify(t){return t-this._last>=this._step&&(this._last=t,this.progress=Math.min(this._progressRange*this._last/this._range,this._progressRange),!0)}},ProgressTracker=_ProgressTracker;__publicField(ProgressTracker,"steps",100);var networkBiasShift=3,Neuron=class{constructor(t){__publicField(this,"r"),__publicField(this,"g"),__publicField(this,"b"),__publicField(this,"a"),this.r=this.g=this.b=this.a=t}toPoint(){return Point.createByRGBA(this.r>>networkBiasShift,this.g>>networkBiasShift,this.b>>networkBiasShift,this.a>>networkBiasShift)}subtract(t,i,e,a){this.r-=0|t,this.g-=0|i,this.b-=0|e,this.a-=0|a}},_NeuQuant=class extends AbstractPaletteQuantizer{constructor(t,i=256){super(),__publicField(this,"_pointArray"),__publicField(this,"_networkSize"),__publicField(this,"_network"),__publicField(this,"_sampleFactor"),__publicField(this,"_radPower"),__publicField(this,"_freq"),__publicField(this,"_bias"),__publicField(this,"_distance"),this._distance=t,this._pointArray=[],this._sampleFactor=1,this._networkSize=i,this._distance.setWhitePoint(255<<networkBiasShift,255<<networkBiasShift,255<<networkBiasShift,255<<networkBiasShift)}sample(t){this._pointArray=this._pointArray.concat(t.getPointArray())}*quantize(){this._init(),yield*this._learn(),yield{palette:this._buildPalette(),progress:100}}_init(){this._freq=[],this._bias=[],this._radPower=[],this._network=[];for(let t=0;t<this._networkSize;t++)this._network[t]=new Neuron((t<<networkBiasShift+8)/this._networkSize|0),this._freq[t]=_NeuQuant._initialBias/this._networkSize|0,this._bias[t]=0}*_learn(){let t=this._sampleFactor;const i=this._pointArray.length;i<_NeuQuant._minpicturebytes&&(t=1);const e=30+(t-1)/3|0,a=i/t|0;let r,s=a/_NeuQuant._nCycles|0,n=_NeuQuant._initAlpha,u=(this._networkSize>>3)*_NeuQuant._radiusBias,l=u>>_NeuQuant._radiusBiasShift;l<=1&&(l=0);for(let o=0;o<l;o++)this._radPower[o]=n*((l*l-o*o)*_NeuQuant._radBias/(l*l))>>>0;r=i<_NeuQuant._minpicturebytes?1:i%_NeuQuant._prime1!==0?_NeuQuant._prime1:i%_NeuQuant._prime2!==0?_NeuQuant._prime2:i%_NeuQuant._prime3!==0?_NeuQuant._prime3:_NeuQuant._prime4;const _=new ProgressTracker(a,99);for(let o=0,h=0;o<a;){_.shouldNotify(o)&&(yield{progress:_.progress});const t=this._pointArray[h],a=t.b<<networkBiasShift,m=t.g<<networkBiasShift,c=t.r<<networkBiasShift,d=t.a<<networkBiasShift,p=this._contest(a,m,c,d);if(this._alterSingle(n,p,a,m,c,d),0!==l&&this._alterNeighbour(l,p,a,m,c,d),h+=r,h>=i&&(h-=i),o++,0===s&&(s=1),o%s===0){n-=n/e|0,u-=u/_NeuQuant._radiusDecrease|0,l=u>>_NeuQuant._radiusBiasShift,l<=1&&(l=0);for(let t=0;t<l;t++)this._radPower[t]=n*((l*l-t*t)*_NeuQuant._radBias/(l*l))>>>0}}}_buildPalette(){const t=new Palette;return this._network.forEach((i=>{t.add(i.toPoint())})),t.sort(),t}_alterNeighbour(t,i,e,a,r,s){let n=i-t;n<-1&&(n=-1);let u=i+t;u>this._networkSize&&(u=this._networkSize);let l=i+1,_=i-1,o=1;for(;l<u||_>n;){const t=this._radPower[o++]/_NeuQuant._alphaRadBias;if(l<u){const i=this._network[l++];i.subtract(t*(i.r-r),t*(i.g-a),t*(i.b-e),t*(i.a-s))}if(_>n){const i=this._network[_--];i.subtract(t*(i.r-r),t*(i.g-a),t*(i.b-e),t*(i.a-s))}}}_alterSingle(t,i,e,a,r,s){t/=_NeuQuant._initAlpha;const n=this._network[i];n.subtract(t*(n.r-r),t*(n.g-a),t*(n.b-e),t*(n.a-s))}_contest(t,i,e,a){const r=1020<<networkBiasShift;let s=~(1<<31),n=s,u=-1,l=u;for(let _=0;_<this._networkSize;_++){const o=this._network[_],h=this._distance.calculateNormalized(o,{r:e,g:i,b:t,a:a})*r|0;h<s&&(s=h,u=_);const m=h-(this._bias[_]>>_NeuQuant._initialBiasShift-networkBiasShift);m<n&&(n=m,l=_);const c=this._freq[_]>>_NeuQuant._betaShift;this._freq[_]-=c,this._bias[_]+=c<<_NeuQuant._gammaShift}return this._freq[u]+=_NeuQuant._beta,this._bias[u]-=_NeuQuant._betaGamma,l}},NeuQuant=_NeuQuant;__publicField(NeuQuant,"_prime1",499),__publicField(NeuQuant,"_prime2",491),__publicField(NeuQuant,"_prime3",487),__publicField(NeuQuant,"_prime4",503),__publicField(NeuQuant,"_minpicturebytes",_NeuQuant._prime4),__publicField(NeuQuant,"_nCycles",100),__publicField(NeuQuant,"_initialBiasShift",16),__publicField(NeuQuant,"_initialBias",1<<_NeuQuant._initialBiasShift),__publicField(NeuQuant,"_gammaShift",10),__publicField(NeuQuant,"_betaShift",10),__publicField(NeuQuant,"_beta",_NeuQuant._initialBias>>_NeuQuant._betaShift),__publicField(NeuQuant,"_betaGamma",_NeuQuant._initialBias<<_NeuQuant._gammaShift-_NeuQuant._betaShift),__publicField(NeuQuant,"_radiusBiasShift",6),__publicField(NeuQuant,"_radiusBias",1<<_NeuQuant._radiusBiasShift),__publicField(NeuQuant,"_radiusDecrease",30),__publicField(NeuQuant,"_alphaBiasShift",10),__publicField(NeuQuant,"_initAlpha",1<<_NeuQuant._alphaBiasShift),__publicField(NeuQuant,"_radBiasShift",8),__publicField(NeuQuant,"_radBias",1<<_NeuQuant._radBiasShift),__publicField(NeuQuant,"_alphaRadBiasShift",_NeuQuant._alphaBiasShift+_NeuQuant._radBiasShift),__publicField(NeuQuant,"_alphaRadBias",1<<_NeuQuant._alphaRadBiasShift);var networkBiasShift2=3,NeuronFloat=class{constructor(t){__publicField(this,"r"),__publicField(this,"g"),__publicField(this,"b"),__publicField(this,"a"),this.r=this.g=this.b=this.a=t}toPoint(){return Point.createByRGBA(this.r>>networkBiasShift2,this.g>>networkBiasShift2,this.b>>networkBiasShift2,this.a>>networkBiasShift2)}subtract(t,i,e,a){this.r-=t,this.g-=i,this.b-=e,this.a-=a}},_NeuQuantFloat=class extends AbstractPaletteQuantizer{constructor(t,i=256){super(),__publicField(this,"_pointArray"),__publicField(this,"_networkSize"),__publicField(this,"_network"),__publicField(this,"_sampleFactor"),__publicField(this,"_radPower"),__publicField(this,"_freq"),__publicField(this,"_bias"),__publicField(this,"_distance"),this._distance=t,this._pointArray=[],this._sampleFactor=1,this._networkSize=i,this._distance.setWhitePoint(255<<networkBiasShift2,255<<networkBiasShift2,255<<networkBiasShift2,255<<networkBiasShift2)}sample(t){this._pointArray=this._pointArray.concat(t.getPointArray())}*quantize(){this._init(),yield*this._learn(),yield{palette:this._buildPalette(),progress:100}}_init(){this._freq=[],this._bias=[],this._radPower=[],this._network=[];for(let t=0;t<this._networkSize;t++)this._network[t]=new NeuronFloat((t<<networkBiasShift2+8)/this._networkSize),this._freq[t]=_NeuQuantFloat._initialBias/this._networkSize,this._bias[t]=0}*_learn(){let t=this._sampleFactor;const i=this._pointArray.length;i<_NeuQuantFloat._minpicturebytes&&(t=1);const e=30+(t-1)/3,a=i/t;let r,s=a/_NeuQuantFloat._nCycles|0,n=_NeuQuantFloat._initAlpha,u=(this._networkSize>>3)*_NeuQuantFloat._radiusBias,l=u>>_NeuQuantFloat._radiusBiasShift;l<=1&&(l=0);for(let o=0;o<l;o++)this._radPower[o]=n*((l*l-o*o)*_NeuQuantFloat._radBias/(l*l));r=i<_NeuQuantFloat._minpicturebytes?1:i%_NeuQuantFloat._prime1!==0?_NeuQuantFloat._prime1:i%_NeuQuantFloat._prime2!==0?_NeuQuantFloat._prime2:i%_NeuQuantFloat._prime3!==0?_NeuQuantFloat._prime3:_NeuQuantFloat._prime4;const _=new ProgressTracker(a,99);for(let o=0,h=0;o<a;){_.shouldNotify(o)&&(yield{progress:_.progress});const t=this._pointArray[h],a=t.b<<networkBiasShift2,m=t.g<<networkBiasShift2,c=t.r<<networkBiasShift2,d=t.a<<networkBiasShift2,p=this._contest(a,m,c,d);if(this._alterSingle(n,p,a,m,c,d),0!==l&&this._alterNeighbour(l,p,a,m,c,d),h+=r,h>=i&&(h-=i),o++,0===s&&(s=1),o%s===0){n-=n/e,u-=u/_NeuQuantFloat._radiusDecrease,l=u>>_NeuQuantFloat._radiusBiasShift,l<=1&&(l=0);for(let t=0;t<l;t++)this._radPower[t]=n*((l*l-t*t)*_NeuQuantFloat._radBias/(l*l))}}}_buildPalette(){const t=new Palette;return this._network.forEach((i=>{t.add(i.toPoint())})),t.sort(),t}_alterNeighbour(t,i,e,a,r,s){let n=i-t;n<-1&&(n=-1);let u=i+t;u>this._networkSize&&(u=this._networkSize);let l=i+1,_=i-1,o=1;for(;l<u||_>n;){const t=this._radPower[o++]/_NeuQuantFloat._alphaRadBias;if(l<u){const i=this._network[l++];i.subtract(t*(i.r-r),t*(i.g-a),t*(i.b-e),t*(i.a-s))}if(_>n){const i=this._network[_--];i.subtract(t*(i.r-r),t*(i.g-a),t*(i.b-e),t*(i.a-s))}}}_alterSingle(t,i,e,a,r,s){t/=_NeuQuantFloat._initAlpha;const n=this._network[i];n.subtract(t*(n.r-r),t*(n.g-a),t*(n.b-e),t*(n.a-s))}_contest(t,i,e,a){const r=1020<<networkBiasShift2;let s=~(1<<31),n=s,u=-1,l=u;for(let _=0;_<this._networkSize;_++){const o=this._network[_],h=this._distance.calculateNormalized(o,{r:e,g:i,b:t,a:a})*r;h<s&&(s=h,u=_);const m=h-(this._bias[_]>>_NeuQuantFloat._initialBiasShift-networkBiasShift2);m<n&&(n=m,l=_);const c=this._freq[_]>>_NeuQuantFloat._betaShift;this._freq[_]-=c,this._bias[_]+=c<<_NeuQuantFloat._gammaShift}return this._freq[u]+=_NeuQuantFloat._beta,this._bias[u]-=_NeuQuantFloat._betaGamma,l}},NeuQuantFloat=_NeuQuantFloat;__publicField(NeuQuantFloat,"_prime1",499),__publicField(NeuQuantFloat,"_prime2",491),__publicField(NeuQuantFloat,"_prime3",487),__publicField(NeuQuantFloat,"_prime4",503),__publicField(NeuQuantFloat,"_minpicturebytes",_NeuQuantFloat._prime4),__publicField(NeuQuantFloat,"_nCycles",100),__publicField(NeuQuantFloat,"_initialBiasShift",16),__publicField(NeuQuantFloat,"_initialBias",1<<_NeuQuantFloat._initialBiasShift),__publicField(NeuQuantFloat,"_gammaShift",10),__publicField(NeuQuantFloat,"_betaShift",10),__publicField(NeuQuantFloat,"_beta",_NeuQuantFloat._initialBias>>_NeuQuantFloat._betaShift),__publicField(NeuQuantFloat,"_betaGamma",_NeuQuantFloat._initialBias<<_NeuQuantFloat._gammaShift-_NeuQuantFloat._betaShift),__publicField(NeuQuantFloat,"_radiusBiasShift",6),__publicField(NeuQuantFloat,"_radiusBias",1<<_NeuQuantFloat._radiusBiasShift),__publicField(NeuQuantFloat,"_radiusDecrease",30),__publicField(NeuQuantFloat,"_alphaBiasShift",10),__publicField(NeuQuantFloat,"_initAlpha",1<<_NeuQuantFloat._alphaBiasShift),__publicField(NeuQuantFloat,"_radBiasShift",8),__publicField(NeuQuantFloat,"_radBias",1<<_NeuQuantFloat._radBiasShift),__publicField(NeuQuantFloat,"_alphaRadBiasShift",_NeuQuantFloat._alphaBiasShift+_NeuQuantFloat._radBiasShift),__publicField(NeuQuantFloat,"_alphaRadBias",1<<_NeuQuantFloat._alphaRadBiasShift);var _ColorHistogram=class{constructor(t,i){__publicField(this,"_method"),__publicField(this,"_hueStats"),__publicField(this,"_histogram"),__publicField(this,"_initColors"),__publicField(this,"_minHueCols"),this._method=t,this._minHueCols=i<<2,this._initColors=i<<2,this._hueStats=new HueStatistics(_ColorHistogram._hueGroups,this._minHueCols),this._histogram=Object.create(null)}sample(t){switch(this._method){case 1:this._colorStats1D(t);break;case 2:this._colorStats2D(t)}}getImportanceSortedColorsIDXI32(){const t=stableSort(Object.keys(this._histogram),((t,i)=>this._histogram[i]-this._histogram[t]));if(0===t.length)return[];let i;switch(this._method){case 1:const e=Math.min(t.length,this._initColors),a=t[e-1],r=this._histogram[a];i=t.slice(0,e);let s=e;const n=t.length;for(;s<n&&this._histogram[t[s]]===r;)i.push(t[s++]);this._hueStats.injectIntoArray(i);break;case 2:i=t;break;default:throw new Error("Incorrect method")}return i.map((t=>+t))}_colorStats1D(t){const i=this._histogram,e=t.getPointArray(),a=e.length;for(let r=0;r<a;r++){const t=e[r].uint32;this._hueStats.check(t),t in i?i[t]++:i[t]=1}}_colorStats2D(t){const i=t.getWidth(),e=t.getHeight(),a=t.getPointArray(),r=_ColorHistogram._boxSize[0],s=_ColorHistogram._boxSize[1],n=r*s,u=this._makeBoxes(i,e,r,s),l=this._histogram;u.forEach((t=>{let e=Math.round(t.w*t.h/n)*_ColorHistogram._boxPixels;e<2&&(e=2);const r={};this._iterateBox(t,i,(t=>{const i=a[t].uint32;this._hueStats.check(i),i in l?l[i]++:i in r?++r[i]>=e&&(l[i]=r[i]):r[i]=1}))})),this._hueStats.injectIntoDictionary(l)}_iterateBox(t,i,e){const a=t,r=a.y*i+a.x,s=(a.y+a.h-1)*i+(a.x+a.w-1),n=i-a.w+1;let u=0,l=r;do{e.call(this,l),l+=++u%a.w===0?n:1}while(l<=s)}_makeBoxes(t,i,e,a){const r=t%e,s=i%a,n=t-r,u=i-s,l=[];for(let _=0;_<i;_+=a)for(let i=0;i<t;i+=e)l.push({x:i,y:_,w:i===n?r:e,h:_===u?s:a});return l}},ColorHistogram=_ColorHistogram;__publicField(ColorHistogram,"_boxSize",[64,64]),__publicField(ColorHistogram,"_boxPixels",2),__publicField(ColorHistogram,"_hueGroups",10);var RemovedColor=class{constructor(t,i,e){__publicField(this,"index"),__publicField(this,"color"),__publicField(this,"distance"),this.index=t,this.color=i,this.distance=e}},RGBQuant=class extends AbstractPaletteQuantizer{constructor(t,i=256,e=2){super(),__publicField(this,"_colors"),__publicField(this,"_initialDistance"),__publicField(this,"_distanceIncrement"),__publicField(this,"_histogram"),__publicField(this,"_distance"),this._distance=t,this._colors=i,this._histogram=new ColorHistogram(e,i),this._initialDistance=.01,this._distanceIncrement=.005}sample(t){this._histogram.sample(t)}*quantize(){const t=this._histogram.getImportanceSortedColorsIDXI32();if(0===t.length)throw new Error("No colors in image");yield*this._buildPalette(t)}*_buildPalette(t){const i=new Palette,e=i.getPointContainer().getPointArray(),a=new Array(t.length);for(let o=0;o<t.length;o++)e.push(Point.createByUint32(t[o])),a[o]=1;const r=e.length,s=[];let n=r,u=this._initialDistance;const l=new ProgressTracker(n-this._colors,99);for(;n>this._colors;){s.length=0;for(let t=0;t<r;t++){if(l.shouldNotify(r-n)&&(yield{progress:l.progress}),0===a[t])continue;const i=e[t];for(let l=t+1;l<r;l++){if(0===a[l])continue;const t=e[l],r=this._distance.calculateNormalized(i,t);r<u&&(s.push(new RemovedColor(l,t,r)),a[l]=0,n--)}}u+=n>3*this._colors?this._initialDistance:this._distanceIncrement}if(n<this._colors){stableSort(s,((t,i)=>i.distance-t.distance));let t=0;for(;n<this._colors&&t<s.length;){a[s[t].index]=1,n++,t++}}let _=e.length;for(let o=_-1;o>=0;o--)0===a[o]&&(o!==_-1&&(e[o]=e[_-1]),--_);e.length=_,i.sort(),yield{palette:i,progress:100}}};function createArray1D(t){const i=[];for(let e=0;e<t;e++)i[e]=0;return i}function createArray4D(t,i,e,a){const r=new Array(t);for(let s=0;s<t;s++){r[s]=new Array(i);for(let t=0;t<i;t++){r[s][t]=new Array(e);for(let i=0;i<e;i++){r[s][t][i]=new Array(a);for(let e=0;e<a;e++)r[s][t][i][e]=0}}}return r}function createArray3D(t,i,e){const a=new Array(t);for(let r=0;r<t;r++){a[r]=new Array(i);for(let t=0;t<i;t++){a[r][t]=new Array(e);for(let i=0;i<e;i++)a[r][t][i]=0}}return a}function fillArray3D(t,i,e,a,r){for(let s=0;s<i;s++){t[s]=[];for(let i=0;i<e;i++){t[s][i]=[];for(let e=0;e<a;e++)t[s][i][e]=r}}}function fillArray1D(t,i,e){for(let a=0;a<i;a++)t[a]=e}var WuColorCube=class{constructor(){__publicField(this,"redMinimum"),__publicField(this,"redMaximum"),__publicField(this,"greenMinimum"),__publicField(this,"greenMaximum"),__publicField(this,"blueMinimum"),__publicField(this,"blueMaximum"),__publicField(this,"volume"),__publicField(this,"alphaMinimum"),__publicField(this,"alphaMaximum")}},_WuQuant=class extends AbstractPaletteQuantizer{constructor(t,i=256,e=5){super(),__publicField(this,"_reds"),__publicField(this,"_greens"),__publicField(this,"_blues"),__publicField(this,"_alphas"),__publicField(this,"_sums"),__publicField(this,"_weights"),__publicField(this,"_momentsRed"),__publicField(this,"_momentsGreen"),__publicField(this,"_momentsBlue"),__publicField(this,"_momentsAlpha"),__publicField(this,"_moments"),__publicField(this,"_table"),__publicField(this,"_pixels"),__publicField(this,"_cubes"),__publicField(this,"_colors"),__publicField(this,"_significantBitsPerChannel"),__publicField(this,"_maxSideIndex"),__publicField(this,"_alphaMaxSideIndex"),__publicField(this,"_sideSize"),__publicField(this,"_alphaSideSize"),__publicField(this,"_distance"),this._distance=t,this._setQuality(e),this._initialize(i)}sample(t){const i=t.getPointArray();for(let e=0,a=i.length;e<a;e++)this._addColor(i[e]);this._pixels=this._pixels.concat(i)}*quantize(){yield*this._preparePalette();const t=new Palette;for(let i=0;i<this._colors;i++)if(this._sums[i]>0){const e=this._sums[i],a=this._reds[i]/e,r=this._greens[i]/e,s=this._blues[i]/e,n=this._alphas[i]/e,u=Point.createByRGBA(0|a,0|r,0|s,0|n);t.add(u)}t.sort(),yield{palette:t,progress:100}}*_preparePalette(){yield*this._calculateMoments();let t=0;const i=createArray1D(this._colors);for(let n=1;n<this._colors;++n){this._cut(this._cubes[t],this._cubes[n])?(i[t]=this._cubes[t].volume>1?this._calculateVariance(this._cubes[t]):0,i[n]=this._cubes[n].volume>1?this._calculateVariance(this._cubes[n]):0):(i[t]=0,n--),t=0;let e=i[0];for(let a=1;a<=n;++a)i[a]>e&&(e=i[a],t=a);if(e<=0){this._colors=n+1;break}}const e=[],a=[],r=[],s=[];for(let n=0;n<this._colors;++n){const t=_WuQuant._volume(this._cubes[n],this._weights);t>0?(e[n]=_WuQuant._volume(this._cubes[n],this._momentsRed)/t|0,a[n]=_WuQuant._volume(this._cubes[n],this._momentsGreen)/t|0,r[n]=_WuQuant._volume(this._cubes[n],this._momentsBlue)/t|0,s[n]=_WuQuant._volume(this._cubes[n],this._momentsAlpha)/t|0):(e[n]=0,a[n]=0,r[n]=0,s[n]=0)}this._reds=createArray1D(this._colors+1),this._greens=createArray1D(this._colors+1),this._blues=createArray1D(this._colors+1),this._alphas=createArray1D(this._colors+1),this._sums=createArray1D(this._colors+1);for(let n=0,u=this._pixels.length;n<u;n++){const t=this._pixels[n];let i=-1,u=Number.MAX_VALUE;for(let n=0;n<this._colors;n++){const l=e[n],_=a[n],o=r[n],h=s[n],m=this._distance.calculateRaw(l,_,o,h,t.r,t.g,t.b,t.a);m<u&&(u=m,i=n)}this._reds[i]+=t.r,this._greens[i]+=t.g,this._blues[i]+=t.b,this._alphas[i]+=t.a,this._sums[i]++}}_addColor(t){const i=8-this._significantBitsPerChannel,e=1+(t.r>>i),a=1+(t.g>>i),r=1+(t.b>>i),s=1+(t.a>>i);this._weights[s][e][a][r]++,this._momentsRed[s][e][a][r]+=t.r,this._momentsGreen[s][e][a][r]+=t.g,this._momentsBlue[s][e][a][r]+=t.b,this._momentsAlpha[s][e][a][r]+=t.a,this._moments[s][e][a][r]+=this._table[t.r]+this._table[t.g]+this._table[t.b]+this._table[t.a]}*_calculateMoments(){const t=[],i=[],e=[],a=[],r=[],s=[],n=createArray3D(this._sideSize,this._sideSize,this._sideSize),u=createArray3D(this._sideSize,this._sideSize,this._sideSize),l=createArray3D(this._sideSize,this._sideSize,this._sideSize),_=createArray3D(this._sideSize,this._sideSize,this._sideSize),o=createArray3D(this._sideSize,this._sideSize,this._sideSize),h=createArray3D(this._sideSize,this._sideSize,this._sideSize);let m=0;const c=new ProgressTracker(this._alphaMaxSideIndex*this._maxSideIndex,99);for(let d=1;d<=this._alphaMaxSideIndex;++d){fillArray3D(n,this._sideSize,this._sideSize,this._sideSize,0),fillArray3D(u,this._sideSize,this._sideSize,this._sideSize,0),fillArray3D(l,this._sideSize,this._sideSize,this._sideSize,0),fillArray3D(_,this._sideSize,this._sideSize,this._sideSize,0),fillArray3D(o,this._sideSize,this._sideSize,this._sideSize,0),fillArray3D(h,this._sideSize,this._sideSize,this._sideSize,0);for(let p=1;p<=this._maxSideIndex;++p,++m){c.shouldNotify(m)&&(yield{progress:c.progress}),fillArray1D(t,this._sideSize,0),fillArray1D(i,this._sideSize,0),fillArray1D(e,this._sideSize,0),fillArray1D(a,this._sideSize,0),fillArray1D(r,this._sideSize,0),fillArray1D(s,this._sideSize,0);for(let m=1;m<=this._maxSideIndex;++m){let c=0,b=0,g=0,M=0,f=0,x=0;for(let w=1;w<=this._maxSideIndex;++w)c+=this._weights[d][p][m][w],b+=this._momentsRed[d][p][m][w],g+=this._momentsGreen[d][p][m][w],M+=this._momentsBlue[d][p][m][w],f+=this._momentsAlpha[d][p][m][w],x+=this._moments[d][p][m][w],t[w]+=c,i[w]+=b,e[w]+=g,a[w]+=M,r[w]+=f,s[w]+=x,n[p][m][w]=n[p-1][m][w]+t[w],u[p][m][w]=u[p-1][m][w]+i[w],l[p][m][w]=l[p-1][m][w]+e[w],_[p][m][w]=_[p-1][m][w]+a[w],o[p][m][w]=o[p-1][m][w]+r[w],h[p][m][w]=h[p-1][m][w]+s[w],this._weights[d][p][m][w]=this._weights[d-1][p][m][w]+n[p][m][w],this._momentsRed[d][p][m][w]=this._momentsRed[d-1][p][m][w]+u[p][m][w],this._momentsGreen[d][p][m][w]=this._momentsGreen[d-1][p][m][w]+l[p][m][w],this._momentsBlue[d][p][m][w]=this._momentsBlue[d-1][p][m][w]+_[p][m][w],this._momentsAlpha[d][p][m][w]=this._momentsAlpha[d-1][p][m][w]+o[p][m][w],this._moments[d][p][m][w]=this._moments[d-1][p][m][w]+h[p][m][w]}}}}static _volumeFloat(t,i){return i[t.alphaMaximum][t.redMaximum][t.greenMaximum][t.blueMaximum]-i[t.alphaMaximum][t.redMaximum][t.greenMinimum][t.blueMaximum]-i[t.alphaMaximum][t.redMinimum][t.greenMaximum][t.blueMaximum]+i[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMaximum]-i[t.alphaMinimum][t.redMaximum][t.greenMaximum][t.blueMaximum]+i[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMaximum]+i[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMaximum]-i[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMaximum]-(i[t.alphaMaximum][t.redMaximum][t.greenMaximum][t.blueMinimum]-i[t.alphaMinimum][t.redMaximum][t.greenMaximum][t.blueMinimum]-i[t.alphaMaximum][t.redMaximum][t.greenMinimum][t.blueMinimum]+i[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMinimum]-i[t.alphaMaximum][t.redMinimum][t.greenMaximum][t.blueMinimum]+i[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMinimum]+i[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMinimum]-i[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMinimum])}static _volume(t,i){return 0|_WuQuant._volumeFloat(t,i)}static _top(t,i,e,a){let r;switch(i){case _WuQuant._alpha:r=a[e][t.redMaximum][t.greenMaximum][t.blueMaximum]-a[e][t.redMaximum][t.greenMinimum][t.blueMaximum]-a[e][t.redMinimum][t.greenMaximum][t.blueMaximum]+a[e][t.redMinimum][t.greenMinimum][t.blueMaximum]-(a[e][t.redMaximum][t.greenMaximum][t.blueMinimum]-a[e][t.redMaximum][t.greenMinimum][t.blueMinimum]-a[e][t.redMinimum][t.greenMaximum][t.blueMinimum]+a[e][t.redMinimum][t.greenMinimum][t.blueMinimum]);break;case _WuQuant._red:r=a[t.alphaMaximum][e][t.greenMaximum][t.blueMaximum]-a[t.alphaMaximum][e][t.greenMinimum][t.blueMaximum]-a[t.alphaMinimum][e][t.greenMaximum][t.blueMaximum]+a[t.alphaMinimum][e][t.greenMinimum][t.blueMaximum]-(a[t.alphaMaximum][e][t.greenMaximum][t.blueMinimum]-a[t.alphaMaximum][e][t.greenMinimum][t.blueMinimum]-a[t.alphaMinimum][e][t.greenMaximum][t.blueMinimum]+a[t.alphaMinimum][e][t.greenMinimum][t.blueMinimum]);break;case _WuQuant._green:r=a[t.alphaMaximum][t.redMaximum][e][t.blueMaximum]-a[t.alphaMaximum][t.redMinimum][e][t.blueMaximum]-a[t.alphaMinimum][t.redMaximum][e][t.blueMaximum]+a[t.alphaMinimum][t.redMinimum][e][t.blueMaximum]-(a[t.alphaMaximum][t.redMaximum][e][t.blueMinimum]-a[t.alphaMaximum][t.redMinimum][e][t.blueMinimum]-a[t.alphaMinimum][t.redMaximum][e][t.blueMinimum]+a[t.alphaMinimum][t.redMinimum][e][t.blueMinimum]);break;case _WuQuant._blue:r=a[t.alphaMaximum][t.redMaximum][t.greenMaximum][e]-a[t.alphaMaximum][t.redMaximum][t.greenMinimum][e]-a[t.alphaMaximum][t.redMinimum][t.greenMaximum][e]+a[t.alphaMaximum][t.redMinimum][t.greenMinimum][e]-(a[t.alphaMinimum][t.redMaximum][t.greenMaximum][e]-a[t.alphaMinimum][t.redMaximum][t.greenMinimum][e]-a[t.alphaMinimum][t.redMinimum][t.greenMaximum][e]+a[t.alphaMinimum][t.redMinimum][t.greenMinimum][e]);break;default:throw new Error("impossible")}return 0|r}static _bottom(t,i,e){switch(i){case _WuQuant._alpha:return-e[t.alphaMinimum][t.redMaximum][t.greenMaximum][t.blueMaximum]+e[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMaximum]+e[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMaximum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMaximum]-(-e[t.alphaMinimum][t.redMaximum][t.greenMaximum][t.blueMinimum]+e[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMinimum]+e[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMinimum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMinimum]);case _WuQuant._red:return-e[t.alphaMaximum][t.redMinimum][t.greenMaximum][t.blueMaximum]+e[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMaximum]+e[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMaximum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMaximum]-(-e[t.alphaMaximum][t.redMinimum][t.greenMaximum][t.blueMinimum]+e[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMinimum]+e[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMinimum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMinimum]);case _WuQuant._green:return-e[t.alphaMaximum][t.redMaximum][t.greenMinimum][t.blueMaximum]+e[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMaximum]+e[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMaximum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMaximum]-(-e[t.alphaMaximum][t.redMaximum][t.greenMinimum][t.blueMinimum]+e[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMinimum]+e[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMinimum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMinimum]);case _WuQuant._blue:return-e[t.alphaMaximum][t.redMaximum][t.greenMaximum][t.blueMinimum]+e[t.alphaMaximum][t.redMaximum][t.greenMinimum][t.blueMinimum]+e[t.alphaMaximum][t.redMinimum][t.greenMaximum][t.blueMinimum]-e[t.alphaMaximum][t.redMinimum][t.greenMinimum][t.blueMinimum]-(-e[t.alphaMinimum][t.redMaximum][t.greenMaximum][t.blueMinimum]+e[t.alphaMinimum][t.redMaximum][t.greenMinimum][t.blueMinimum]+e[t.alphaMinimum][t.redMinimum][t.greenMaximum][t.blueMinimum]-e[t.alphaMinimum][t.redMinimum][t.greenMinimum][t.blueMinimum]);default:return 0}}_calculateVariance(t){const i=_WuQuant._volume(t,this._momentsRed),e=_WuQuant._volume(t,this._momentsGreen),a=_WuQuant._volume(t,this._momentsBlue),r=_WuQuant._volume(t,this._momentsAlpha);return _WuQuant._volumeFloat(t,this._moments)-(i*i+e*e+a*a+r*r)/_WuQuant._volume(t,this._weights)}_maximize(t,i,e,a,r,s,n,u,l){const _=0|_WuQuant._bottom(t,i,this._momentsRed),o=0|_WuQuant._bottom(t,i,this._momentsGreen),h=0|_WuQuant._bottom(t,i,this._momentsBlue),m=0|_WuQuant._bottom(t,i,this._momentsAlpha),c=0|_WuQuant._bottom(t,i,this._weights);let d=0,p=-1;for(let b=e;b<a;++b){let e=_+_WuQuant._top(t,i,b,this._momentsRed),a=o+_WuQuant._top(t,i,b,this._momentsGreen),g=h+_WuQuant._top(t,i,b,this._momentsBlue),M=m+_WuQuant._top(t,i,b,this._momentsAlpha),f=c+_WuQuant._top(t,i,b,this._weights);if(0!==f){let t=e*e+a*a+g*g+M*M,i=t/f;e=r-e,a=s-a,g=n-g,M=u-M,f=l-f,0!==f&&(t=e*e+a*a+g*g+M*M,i+=t/f,i>d&&(d=i,p=b))}}return{max:d,position:p}}_cut(t,i){let e;const a=_WuQuant._volume(t,this._momentsRed),r=_WuQuant._volume(t,this._momentsGreen),s=_WuQuant._volume(t,this._momentsBlue),n=_WuQuant._volume(t,this._momentsAlpha),u=_WuQuant._volume(t,this._weights),l=this._maximize(t,_WuQuant._red,t.redMinimum+1,t.redMaximum,a,r,s,n,u),_=this._maximize(t,_WuQuant._green,t.greenMinimum+1,t.greenMaximum,a,r,s,n,u),o=this._maximize(t,_WuQuant._blue,t.blueMinimum+1,t.blueMaximum,a,r,s,n,u),h=this._maximize(t,_WuQuant._alpha,t.alphaMinimum+1,t.alphaMaximum,a,r,s,n,u);if(h.max>=l.max&&h.max>=_.max&&h.max>=o.max){if(e=_WuQuant._alpha,h.position<0)return!1}else e=l.max>=h.max&&l.max>=_.max&&l.max>=o.max?_WuQuant._red:_.max>=h.max&&_.max>=l.max&&_.max>=o.max?_WuQuant._green:_WuQuant._blue;switch(i.redMaximum=t.redMaximum,i.greenMaximum=t.greenMaximum,i.blueMaximum=t.blueMaximum,i.alphaMaximum=t.alphaMaximum,e){case _WuQuant._red:i.redMinimum=t.redMaximum=l.position,i.greenMinimum=t.greenMinimum,i.blueMinimum=t.blueMinimum,i.alphaMinimum=t.alphaMinimum;break;case _WuQuant._green:i.greenMinimum=t.greenMaximum=_.position,i.redMinimum=t.redMinimum,i.blueMinimum=t.blueMinimum,i.alphaMinimum=t.alphaMinimum;break;case _WuQuant._blue:i.blueMinimum=t.blueMaximum=o.position,i.redMinimum=t.redMinimum,i.greenMinimum=t.greenMinimum,i.alphaMinimum=t.alphaMinimum;break;case _WuQuant._alpha:i.alphaMinimum=t.alphaMaximum=h.position,i.blueMinimum=t.blueMinimum,i.redMinimum=t.redMinimum,i.greenMinimum=t.greenMinimum}return t.volume=(t.redMaximum-t.redMinimum)*(t.greenMaximum-t.greenMinimum)*(t.blueMaximum-t.blueMinimum)*(t.alphaMaximum-t.alphaMinimum),i.volume=(i.redMaximum-i.redMinimum)*(i.greenMaximum-i.greenMinimum)*(i.blueMaximum-i.blueMinimum)*(i.alphaMaximum-i.alphaMinimum),!0}_initialize(t){this._colors=t,this._cubes=[];for(let i=0;i<t;i++)this._cubes[i]=new WuColorCube;this._cubes[0].redMinimum=0,this._cubes[0].greenMinimum=0,this._cubes[0].blueMinimum=0,this._cubes[0].alphaMinimum=0,this._cubes[0].redMaximum=this._maxSideIndex,this._cubes[0].greenMaximum=this._maxSideIndex,this._cubes[0].blueMaximum=this._maxSideIndex,this._cubes[0].alphaMaximum=this._alphaMaxSideIndex,this._weights=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsRed=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsGreen=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsBlue=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._momentsAlpha=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._moments=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize),this._table=[];for(let i=0;i<256;++i)this._table[i]=i*i;this._pixels=[]}_setQuality(t=5){this._significantBitsPerChannel=t,this._maxSideIndex=1<<this._significantBitsPerChannel,this._alphaMaxSideIndex=this._maxSideIndex,this._sideSize=this._maxSideIndex+1,this._alphaSideSize=this._alphaMaxSideIndex+1}},WuQuant=_WuQuant;__publicField(WuQuant,"_alpha",3),__publicField(WuQuant,"_red",2),__publicField(WuQuant,"_green",1),__publicField(WuQuant,"_blue",0);var image_exports={};__export(image_exports,{AbstractImageQuantizer:()=>AbstractImageQuantizer,ErrorDiffusionArray:()=>ErrorDiffusionArray,ErrorDiffusionArrayKernel:()=>ErrorDiffusionArrayKernel,ErrorDiffusionRiemersma:()=>ErrorDiffusionRiemersma,NearestColor:()=>NearestColor});var AbstractImageQuantizer=class{quantizeSync(t,i){for(const e of this.quantize(t,i))if(e.pointContainer)return e.pointContainer;throw new Error("unreachable")}},NearestColor=class extends AbstractImageQuantizer{constructor(t){super(),__publicField(this,"_distance"),this._distance=t}*quantize(t,i){const e=t.getPointArray(),a=t.getWidth(),r=t.getHeight(),s=new ProgressTracker(r,99);for(let n=0;n<r;n++){s.shouldNotify(n)&&(yield{progress:s.progress});for(let t=0,r=n*a;t<a;t++,r++){const t=e[r];t.from(i.getNearestColor(this._distance,t))}}yield{pointContainer:t,progress:100}}},ErrorDiffusionArrayKernel=(t=>(t[t.FloydSteinberg=0]="FloydSteinberg",t[t.FalseFloydSteinberg=1]="FalseFloydSteinberg",t[t.Stucki=2]="Stucki",t[t.Atkinson=3]="Atkinson",t[t.Jarvis=4]="Jarvis",t[t.Burkes=5]="Burkes",t[t.Sierra=6]="Sierra",t[t.TwoSierra=7]="TwoSierra",t[t.SierraLite=8]="SierraLite",t))(ErrorDiffusionArrayKernel||{}),ErrorDiffusionArray=class extends AbstractImageQuantizer{constructor(t,i,e=!0,a=0,r=!1){super(),__publicField(this,"_minColorDistance"),__publicField(this,"_serpentine"),__publicField(this,"_kernel"),__publicField(this,"_calculateErrorLikeGIMP"),__publicField(this,"_distance"),this._setKernel(i),this._distance=t,this._minColorDistance=a,this._serpentine=e,this._calculateErrorLikeGIMP=r}*quantize(t,i){const e=t.getPointArray(),a=new Point,r=t.getWidth(),s=t.getHeight(),n=[];let u=1,l=1;for(const o of this._kernel){const t=o[2]+1;l<t&&(l=t)}for(let o=0;o<l;o++)this._fillErrorLine(n[o]=[],r);const _=new ProgressTracker(s,99);for(let o=0;o<s;o++){_.shouldNotify(o)&&(yield{progress:_.progress}),this._serpentine&&(u*=-1);const t=o*r,l=1===u?0:r-1,h=1===u?r:-1;this._fillErrorLine(n[0],r),n.push(n.shift());const m=n[0];for(let _=l,c=t+l;_!==h;_+=u,c+=u){const t=e[c],l=m[_];a.from(t);const h=Point.createByRGBA(inRange0to255Rounded(t.r+l[0]),inRange0to255Rounded(t.g+l[1]),inRange0to255Rounded(t.b+l[2]),inRange0to255Rounded(t.a+l[3])),d=i.getNearestColor(this._distance,h);if(t.from(d),this._minColorDistance){if(this._distance.calculateNormalized(a,d)<this._minColorDistance)continue}let p,b,g,M;this._calculateErrorLikeGIMP?(p=h.r-d.r,b=h.g-d.g,g=h.b-d.b,M=h.a-d.a):(p=a.r-d.r,b=a.g-d.g,g=a.b-d.b,M=a.a-d.a);const f=1===u?0:this._kernel.length-1,x=1===u?this._kernel.length:-1;for(let i=f;i!==x;i+=u){const t=this._kernel[i][1]*u,e=this._kernel[i][2];if(t+_>=0&&t+_<r&&e+o>=0&&e+o<s){const a=this._kernel[i][0],r=n[e][t+_];r[0]+=p*a,r[1]+=b*a,r[2]+=g*a,r[3]+=M*a}}}}yield{pointContainer:t,progress:100}}_fillErrorLine(t,i){t.length>i&&(t.length=i);const e=t.length;for(let a=0;a<e;a++){const i=t[a];i[0]=i[1]=i[2]=i[3]=0}for(let a=e;a<i;a++)t[a]=[0,0,0,0]}_setKernel(t){switch(t){case 0:this._kernel=[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]];break;case 1:this._kernel=[[3/8,1,0],[3/8,0,1],[2/8,1,1]];break;case 2:this._kernel=[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]];break;case 3:this._kernel=[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]];break;case 4:this._kernel=[[7/48,1,0],[5/48,2,0],[3/48,-2,1],[5/48,-1,1],[7/48,0,1],[5/48,1,1],[3/48,2,1],[1/48,-2,2],[3/48,-1,2],[5/48,0,2],[3/48,1,2],[1/48,2,2]];break;case 5:this._kernel=[[.25,1,0],[4/32,2,0],[2/32,-2,1],[4/32,-1,1],[.25,0,1],[4/32,1,1],[2/32,2,1]];break;case 6:this._kernel=[[5/32,1,0],[3/32,2,0],[2/32,-2,1],[4/32,-1,1],[5/32,0,1],[4/32,1,1],[2/32,2,1],[2/32,-1,2],[3/32,0,2],[2/32,1,2]];break;case 7:this._kernel=[[.25,1,0],[3/16,2,0],[1/16,-2,1],[2/16,-1,1],[3/16,0,1],[2/16,1,1],[1/16,2,1]];break;case 8:this._kernel=[[.5,1,0],[1/4,-1,1],[1/4,0,1]];break;default:throw new Error(`ErrorDiffusionArray: unknown kernel = ${t}`)}}};function*hilbertCurve(t,i,e){const a=Math.max(t,i),r={width:t,height:i,level:Math.floor(Math.log(a)/Math.log(2)+1),callback:e,tracker:new ProgressTracker(t*i,99),index:0,x:0,y:0};yield*walkHilbert(r,1),visit(r,0)}function*walkHilbert(t,i){if(!(t.level<1)){switch(t.tracker.shouldNotify(t.index)&&(yield{progress:t.tracker.progress}),t.level--,i){case 2:yield*walkHilbert(t,1),visit(t,3),yield*walkHilbert(t,2),visit(t,4),yield*walkHilbert(t,2),visit(t,2),yield*walkHilbert(t,4);break;case 3:yield*walkHilbert(t,4),visit(t,2),yield*walkHilbert(t,3),visit(t,1),yield*walkHilbert(t,3),visit(t,3),yield*walkHilbert(t,1);break;case 1:yield*walkHilbert(t,2),visit(t,4),yield*walkHilbert(t,1),visit(t,3),yield*walkHilbert(t,1),visit(t,1),yield*walkHilbert(t,3);break;case 4:yield*walkHilbert(t,3),visit(t,1),yield*walkHilbert(t,4),visit(t,2),yield*walkHilbert(t,4),visit(t,4),yield*walkHilbert(t,2)}t.level++}}function visit(t,i){switch(t.x>=0&&t.x<t.width&&t.y>=0&&t.y<t.height&&(t.callback(t.x,t.y),t.index++),i){case 2:t.x--;break;case 3:t.x++;break;case 1:t.y--;break;case 4:t.y++}}var ErrorDiffusionRiemersma=class extends AbstractImageQuantizer{constructor(t,i=16,e=1){super(),__publicField(this,"_distance"),__publicField(this,"_weights"),__publicField(this,"_errorQueueSize"),this._distance=t,this._errorQueueSize=i,this._weights=ErrorDiffusionRiemersma._createWeights(e,i)}*quantize(t,i){const e=t.getPointArray(),a=t.getWidth(),r=t.getHeight(),s=[];let n=0;for(let u=0;u<this._errorQueueSize;u++)s[u]={r:0,g:0,b:0,a:0};yield*hilbertCurve(a,r,((t,r)=>{const u=e[t+r*a];let{r:l,g:_,b:o,a:h}=u;for(let i=0;i<this._errorQueueSize;i++){const t=this._weights[i],e=s[(i+n)%this._errorQueueSize];l+=e.r*t,_+=e.g*t,o+=e.b*t,h+=e.a*t}const m=Point.createByRGBA(inRange0to255Rounded(l),inRange0to255Rounded(_),inRange0to255Rounded(o),inRange0to255Rounded(h)),c=i.getNearestColor(this._distance,m);n=(n+1)%this._errorQueueSize;const d=(n+this._errorQueueSize-1)%this._errorQueueSize;s[d].r=u.r-c.r,s[d].g=u.g-c.g,s[d].b=u.b-c.b,s[d].a=u.a-c.a,u.from(c)})),yield{pointContainer:t,progress:100}}static _createWeights(t,i){const e=[],a=Math.exp(Math.log(i)/(i-1));for(let r=0,s=1;r<i;r++)e[r]=(s+.5|0)/i*t,s*=a;return e}},quality_exports={};__export(quality_exports,{ssim:()=>ssim});var K1=.01,K2=.03;function ssim(t,i){if(t.getHeight()!==i.getHeight()||t.getWidth()!==i.getWidth())throw new Error("Images have different sizes!");const e=(255*K1)**2,a=(255*K2)**2;let r=0,s=0;return iterate(t,i,((t,i,n,u)=>{let l=0,_=0,o=0;for(let e=0;e<t.length;e++)_+=(t[e]-n)**2,o+=(i[e]-u)**2,l+=(t[e]-n)*(i[e]-u);const h=t.length-1;_/=h,o/=h,l/=h;s+=(2*n*u+e)*(2*l+a)/((n**2+u**2+e)*(_+o+a)),r++})),s/r}function iterate(t,i,e){const a=t.getWidth(),r=t.getHeight();for(let s=0;s<r;s+=8)for(let n=0;n<a;n+=8){const u=Math.min(8,a-n),l=Math.min(8,r-s),_=calculateLumaValuesForWindow(t,n,s,u,l),o=calculateLumaValuesForWindow(i,n,s,u,l);e(_,o,calculateAverageLuma(_),calculateAverageLuma(o))}}function calculateLumaValuesForWindow(t,i,e,a,r){const s=t.getPointArray(),n=[];let u=0;for(let l=e;l<e+r;l++){const e=l*t.getWidth();for(let t=i;t<i+a;t++){const i=s[e+t];n[u]=.2126*i.r+.7152*i.g+.0722*i.b,u++}}return n}function calculateAverageLuma(t){let i=0;for(const e of t)i+=e;return i/t.length}var setImmediateImpl="function"===typeof setImmediate?setImmediate:"undefined"!==typeof process&&"function"===typeof(null==process?void 0:process.nextTick)?t=>process.nextTick(t):t=>setTimeout(t,0);function buildPaletteSync(t,{colorDistanceFormula:i,paletteQuantization:e,colors:a}={}){const r=paletteQuantizationToPaletteQuantizer(colorDistanceFormulaToColorDistance(i),e,a);return t.forEach((t=>r.sample(t))),r.quantizeSync()}async function buildPalette(t,{colorDistanceFormula:i,paletteQuantization:e,colors:a,onProgress:r}={}){return new Promise(((s,n)=>{const u=paletteQuantizationToPaletteQuantizer(colorDistanceFormulaToColorDistance(i),e,a);let l;t.forEach((t=>u.sample(t)));const _=u.quantize(),o=()=>{try{const t=_.next();t.done?s(l):(t.value.palette&&(l=t.value.palette),r&&r(t.value.progress),setImmediateImpl(o))}catch(t){n(t)}};setImmediateImpl(o)}))}function applyPaletteSync(t,i,{colorDistanceFormula:e,imageQuantization:a}={}){return imageQuantizationToImageQuantizer(colorDistanceFormulaToColorDistance(e),a).quantizeSync(t,i)}async function applyPalette(t,i,{colorDistanceFormula:e,imageQuantization:a,onProgress:r}={}){return new Promise(((s,n)=>{let u;const l=imageQuantizationToImageQuantizer(colorDistanceFormulaToColorDistance(e),a).quantize(t,i),_=()=>{try{const t=l.next();t.done?s(u):(t.value.pointContainer&&(u=t.value.pointContainer),r&&r(t.value.progress),setImmediateImpl(_))}catch(t){n(t)}};setImmediateImpl(_)}))}function colorDistanceFormulaToColorDistance(t="euclidean-bt709"){switch(t){case"cie94-graphic-arts":return new CIE94GraphicArts;case"cie94-textiles":return new CIE94Textiles;case"ciede2000":return new CIEDE2000;case"color-metric":return new CMetric;case"euclidean":return new Euclidean;case"euclidean-bt709":return new EuclideanBT709;case"euclidean-bt709-noalpha":return new EuclideanBT709NoAlpha;case"manhattan":return new Manhattan;case"manhattan-bt709":return new ManhattanBT709;case"manhattan-nommyde":return new ManhattanNommyde;case"pngquant":return new PNGQuant;default:throw new Error(`Unknown colorDistanceFormula ${t}`)}}function imageQuantizationToImageQuantizer(t,i="floyd-steinberg"){switch(i){case"nearest":return new NearestColor(t);case"riemersma":return new ErrorDiffusionRiemersma(t);case"floyd-steinberg":return new ErrorDiffusionArray(t,0);case"false-floyd-steinberg":return new ErrorDiffusionArray(t,1);case"stucki":return new ErrorDiffusionArray(t,2);case"atkinson":return new ErrorDiffusionArray(t,3);case"jarvis":return new ErrorDiffusionArray(t,4);case"burkes":return new ErrorDiffusionArray(t,5);case"sierra":return new ErrorDiffusionArray(t,6);case"two-sierra":return new ErrorDiffusionArray(t,7);case"sierra-lite":return new ErrorDiffusionArray(t,8);default:throw new Error(`Unknown imageQuantization ${i}`)}}function paletteQuantizationToPaletteQuantizer(t,i="wuquant",e=256){switch(i){case"neuquant":return new NeuQuant(t,e);case"rgbquant":return new RGBQuant(t,e);case"wuquant":return new WuQuant(t,e);case"neuquant-float":return new NeuQuantFloat(t,e);default:throw new Error(`Unknown paletteQuantization ${i}`)}}module.exports=__toCommonJS(src_exports);